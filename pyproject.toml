[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "c1-ohlcv"
version = "0.1.0"
description = "Пайплайн C1+C3 (+C4 опционально): минутные OHLCV, Parquet-хранилище, ресемплинг, признаки, режимы"
authors = [{ name = "Project" }]
readme = "README.md"
requires-python = ">=3.9"
license = { text = "Proprietary" }
keywords = ["ohlcv", "bybit", "parquet", "resample", "data-quality", "features", "regime"]

# Базовый слой (C1/C3): только необходимые зависимостии
# C4 выведен в extras "regime".
dependencies = [
  "numpy>=1.23",
  "pandas>=1.5",
  "pyarrow>=12",
  "requests>=2.31",
]

[project.optional-dependencies]
# Запуск тестов
test = [
  "pytest>=7.4",
]
# Разработка
dev = [
  "pytest>=7.4",
  "black>=23.0",
  "isort>=5.12",
  "mypy>=1.5",
]
# Режимы рынка (C4): ставится при необходимости
regime = [
  "scikit-learn>=1.2",
  "hmmlearn>=0.3.0",
  "ruptures>=1.1.7",
]
# Удобный агрегат
all = [
  "c1-ohlcv[test]",
  "c1-ohlcv[dev]",
  "c1-ohlcv[regime]",
]

[project.scripts]
# CLI C1
c1-ohlcv = "ohlcv.cli:main"
# CLI C3
c3-features = "ohlcv.features.cli:main"
# CLI C4 (доступен при установке extras "regime")
c4-regime = "c4_regime.cli:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
# Включаем и C1/C3 (ohlcv*), и C4 (c4_regime*)
include = ["ohlcv*", "c4_regime*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
# На случай локальных YAML/конфигов внутри пакетов
"ohlcv" = ["**/*.yaml", "**/*.yml"]
"c4_regime" = ["**/*.yaml", "**/*.yml"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-q"
python_files = ["test_*.py"]
